version: '3.5'

services:
  onetl_tests:
    image: ${TEST_IMAGE}
    depends_on:
    - postgres
    - hive2
    - oracle
    env_file:
    - onetl_local.default.env
    environment:
      WAIT: 140
    working_dir: /opt/project
    networks:
    - onetl
    command: bash -c 'pytest --verbose -s -c pytest.ini tests --cov-append --cov=onetl --cov-config=tests/.coveragerc --cov-report=xml:${COVERAGE_FILE} --junitxml=${JUNIT_FILE}'

  postgres:
    # TODO: fix later
    build:
      context: ./docker/postgres/
      dockerfile: Dockerfile
    env_file: onetl_local.default.env
    restart: always
    networks:
    - onetl

  hive2:
    # TODO: fix later
    build:
      context: ./docker/hive2
      dockerfile: Dockerfile
    env_file: onetl_local.default.env
    hostname: hive2
    networks:
    - onetl

  oracle:
    build:
      context: ./docker/oracle
      dockerfile: Dockerfile
    restart: always
    networks:
    - onetl
    hostname: oracle
    depends_on:
      - postgres

networks:
  onetl:
    name: onetl-${CI_PIPELINE_ID}
