version: '3.5'

# NOTE: Только для разработки и локального/CI тестирования
services:
  postgres:
    # TODO: fix later
    build:
      context: ./docker/postgres/
      dockerfile: Dockerfile
    env_file: onetl_local.default.env
    restart: always
    networks: [onetl]
    ports:
    - 5432:5432

  hive2:
    # TODO: fix later
    build:
      context: ./docker/hive2
      dockerfile: Dockerfile
    env_file: onetl_local.default.env
    hostname: hive2
    networks: [onetl]
    depends_on:
    - postgres
    ports:
    - 50010:50010
    - 50020:50020
    - 50070:50070
    - 50075:50075
    - 10000:10000
    - 10020:10020
    - 19888:19888
    - 9000:9000
    - 8030:8030
    - 8031:8031
    - 8032:8032
    - 8033:8033
    - 8040:8040
    - 8042:8042
    - 8088:8088

  oracle:
    build:
      context: ./docker/oracle
      dockerfile: Dockerfile
    restart: always
    ports:
    - 1522:1521
    - 5501:5500
    networks: [onetl]
    hostname: oracle
    depends_on:
    - postgres

# Для Postgres можно прокинуть postgres в /var/lib/postgresql/data,
#  тогда содержимое БД будет сохраняться между подъемами docker-compose.
volumes:
  tmp:

networks:
  onetl:
    name: onetl
